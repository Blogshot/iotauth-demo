"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const iotaSeed = require("iota-seed-generator");
const IOTA = require("iota.lib.js");
const moment = require("moment");
class IotAuth {
    constructor(seed, duration = Infinity, node = 'https://nodes.iota.cafe') {
        this.iotaClient = new IOTA({
            provider: node,
        });
        if (seed) {
            this.receiveSeed = seed;
        }
        this.duration = duration;
    }
    isTransactionValid(validationCode) {
        return __awaiter(this, void 0, void 0, function* () {
            const receiveSeed = yield this.getSeed();
            const accountData = yield this.getAccountData(receiveSeed);
            const transferObj = accountData.transfers[accountData.transfers.length - 1];
            const transfer = transferObj[0];
            try {
                let code = this.iotaClient.utils.extractJson(transferObj);
                code = JSON.parse(code);
                const isValidAddress = yield this.isValidAddress(transfer.address, accountData.transfers.length - 1);
                const isValidTimestamp = this.isValidTimestamp(transfer.timestamp);
                return (((code && code.code === validationCode) || !validationCode) &&
                    isValidAddress &&
                    isValidTimestamp);
            }
            catch (e) {
                return false;
            }
        });
    }
    getSeed() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.receiveSeed) {
                this.receiveSeed = yield this.generateNewSeed();
            }
            return this.receiveSeed;
        });
    }
    generateValidationCode() {
        return __awaiter(this, void 0, void 0, function* () {
            const seed = yield iotaSeed();
            return seed.slice(0, 6);
        });
    }
    getNewAddress(seed, options = { index: 0, returnAll: true }) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise(resolve => {
                this.iotaClient.api.getNewAddress(seed, options, (empty, addresses, transactions) => {
                    if (addresses instanceof Array) {
                        resolve(addresses[Math.min(options.index, addresses.length - 1)]);
                    }
                    else {
                        resolve(addresses);
                    }
                });
            });
        });
    }
    isValidAddress(receiveAddress, index) {
        return __awaiter(this, void 0, void 0, function* () {
            const correctAddress = yield this.getNewAddress(this.receiveSeed, {
                index,
                returnAll: true,
            });
            return correctAddress === receiveAddress;
        });
    }
    isValidTimestamp(timestamp) {
        const transactionTime = moment(timestamp * 1000);
        const now = moment();
        const diff = now.diff(transactionTime, 'minutes');
        return diff <= this.duration;
    }
    generateNewSeed() {
        return __awaiter(this, void 0, void 0, function* () {
            const seed = yield iotaSeed();
            return seed;
        });
    }
    getAccountData(seed) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                this.iotaClient.api.getAccountData(seed, (error, accountData) => {
                    resolve(accountData);
                });
            });
        });
    }
}
exports.IotAuth = IotAuth;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW90YXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbXBsL2lvdGF1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGdEQUFnRDtBQUNoRCxvQ0FBb0M7QUFDcEMsaUNBQWlDO0FBRWpDO0lBSUUsWUFDRSxJQUFhLEVBQ2IsV0FBbUIsUUFBUSxFQUMzQixPQUFlLHlCQUF5QjtRQUV4QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksSUFBSSxDQUFDO1lBQ3pCLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQyxDQUFDO1FBQ0gsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNULElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQzFCLENBQUM7UUFDRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBQ1ksa0JBQWtCLENBQUMsY0FBdUI7O1lBQ3JELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3pDLE1BQU0sV0FBVyxHQUFRLE1BQU0sSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNoRSxNQUFNLFdBQVcsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzVFLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUM7Z0JBQ0gsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUMxRCxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDeEIsTUFBTSxjQUFjLEdBQUcsTUFBTSxJQUFJLENBQUMsY0FBYyxDQUM5QyxRQUFRLENBQUMsT0FBTyxF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